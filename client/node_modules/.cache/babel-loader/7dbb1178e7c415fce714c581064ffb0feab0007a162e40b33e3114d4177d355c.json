{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qotib\\\\OneDrive\\\\Desktop\\\\DNA_PROJECT\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [dnaSequence, setDnaSequence] = useState('');\n  const [processedDna, setProcessedDna] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [file, setFile] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let sequenceToProcess = dnaSequence;\n    if (!dnaSequence && !file) {\n      alert('Please enter a DNA sequence or upload a FASTA file');\n      return;\n    }\n    if (file) {\n      try {\n        const fileText = await file.text();\n        const fastaSequence = fileText.split('\\n').slice(1).join('').trim();\n        sequenceToProcess = fastaSequence;\n      } catch (error) {\n        alert('Error reading the FASTA file');\n        console.error(error);\n        return;\n      }\n    }\n    setLoading(true);\n    try {\n      const response = await axios.post('http://localhost:3001/process-dna', {\n        dnaSequence: sequenceToProcess\n      });\n      setProcessedDna(response.data.processedDna);\n    } catch (error) {\n      console.error('Error processing DNA:', error);\n      alert('Error processing DNA sequence');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(processedDna);\n    alert('Processed DNA sequence copied to clipboard!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      fontFamily: 'Arial, sans-serif',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"DNA Sequence Processor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px'\n          },\n          children: \"Enter DNA Sequence:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: dnaSequence,\n          onChange: e => setDnaSequence(e.target.value),\n          placeholder: \"Enter DNA sequence\",\n          style: {\n            width: '100%',\n            padding: '8px',\n            border: '1px solid #ccc',\n            borderRadius: '4px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px'\n          },\n          children: \"Or Upload FASTA File:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".fasta\",\n          onChange: e => setFile(e.target.files[0]),\n          style: {\n            padding: '5px',\n            border: '1px solid #ccc',\n            borderRadius: '4px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        style: {\n          padding: '10px 20px',\n          backgroundColor: '#007BFF',\n          color: '#fff',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: loading ? 'not-allowed' : 'pointer'\n        },\n        children: loading ? 'Processing...' : 'Process DNA'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), processedDna && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Processed DNA Sequence\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxHeight: '200px',\n          overflowY: 'auto',\n          padding: '10px',\n          border: '1px solid #ccc',\n          borderRadius: '4px',\n          boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n          marginBottom: '10px',\n          backgroundColor: '#f9f9f9'\n        },\n        children: processedDna.match(new RegExp(`.{1,${Math.floor(window.innerWidth * 0.4 / 10)}}`, 'g')).map((line, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontFamily: 'monospace',\n            whiteSpace: 'pre-wrap'\n          },\n          children: line\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: copyToClipboard,\n        style: {\n          padding: '10px 20px',\n          backgroundColor: '#28a745',\n          color: '#fff',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: \"Copy to Clipboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MQBFny4tC+CqQRIvY6iMnACAQgo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","dnaSequence","setDnaSequence","processedDna","setProcessedDna","loading","setLoading","file","setFile","handleSubmit","e","preventDefault","sequenceToProcess","alert","fileText","text","fastaSequence","split","slice","join","trim","error","console","response","post","data","copyToClipboard","navigator","clipboard","writeText","className","style","fontFamily","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","marginBottom","display","type","value","onChange","target","placeholder","width","border","borderRadius","accept","files","disabled","backgroundColor","color","cursor","maxHeight","overflowY","boxShadow","match","RegExp","Math","floor","window","innerWidth","map","line","index","whiteSpace","onClick","_c","$RefreshReg$"],"sources":["C:/Users/qotib/OneDrive/Desktop/DNA_PROJECT/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [dnaSequence, setDnaSequence] = useState('');\n  const [processedDna, setProcessedDna] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [file, setFile] = useState(null);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    let sequenceToProcess = dnaSequence;\n\n    if (!dnaSequence && !file) {\n      alert('Please enter a DNA sequence or upload a FASTA file');\n      return;\n    }\n\n    if (file) {\n      try {\n        const fileText = await file.text();\n        const fastaSequence = fileText.split('\\n').slice(1).join('').trim();\n        sequenceToProcess = fastaSequence;\n      } catch (error) {\n        alert('Error reading the FASTA file');\n        console.error(error);\n        return;\n      }\n    }\n\n    setLoading(true);\n\n    try {\n      const response = await axios.post('http://localhost:3001/process-dna', {\n        dnaSequence: sequenceToProcess,\n      });\n\n      setProcessedDna(response.data.processedDna);\n    } catch (error) {\n      console.error('Error processing DNA:', error);\n      alert('Error processing DNA sequence');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(processedDna);\n    alert('Processed DNA sequence copied to clipboard!');\n  };\n\n  return (\n    <div className=\"App\" style={{ fontFamily: 'Arial, sans-serif', padding: '20px' }}>\n      <h1>DNA Sequence Processor</h1>\n\n      <form onSubmit={handleSubmit} style={{ marginBottom: '20px' }}>\n        <div style={{ marginBottom: '10px' }}>\n          <label style={{ display: 'block', marginBottom: '5px' }}>Enter DNA Sequence:</label>\n          <input\n            type=\"text\"\n            value={dnaSequence}\n            onChange={(e) => setDnaSequence(e.target.value)}\n            placeholder=\"Enter DNA sequence\"\n            style={{\n              width: '100%',\n              padding: '8px',\n              border: '1px solid #ccc',\n              borderRadius: '4px',\n            }}\n          />\n        </div>\n        <div style={{ marginBottom: '10px' }}>\n          <label style={{ display: 'block', marginBottom: '5px' }}>Or Upload FASTA File:</label>\n          <input\n            type=\"file\"\n            accept=\".fasta\"\n            onChange={(e) => setFile(e.target.files[0])}\n            style={{\n              padding: '5px',\n              border: '1px solid #ccc',\n              borderRadius: '4px',\n            }}\n          />\n        </div>\n        <button\n          type=\"submit\"\n          disabled={loading}\n          style={{\n            padding: '10px 20px',\n            backgroundColor: '#007BFF',\n            color: '#fff',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: loading ? 'not-allowed' : 'pointer',\n          }}\n        >\n          {loading ? 'Processing...' : 'Process DNA'}\n        </button>\n      </form>\n\n      {processedDna && (\n        <div>\n          <h2>Processed DNA Sequence</h2>\n          <div\n            style={{\n              maxHeight: '200px',\n              overflowY: 'auto',\n              padding: '10px',\n              border: '1px solid #ccc',\n              borderRadius: '4px',\n              boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n              marginBottom: '10px',\n              backgroundColor: '#f9f9f9',\n            }}\n          >\n            {processedDna.match(new RegExp(`.{1,${Math.floor(window.innerWidth * 0.4 / 10)}}`, 'g')).map((line, index) => (\n              <div key={index} style={{ fontFamily: 'monospace', whiteSpace: 'pre-wrap' }}>\n                {line}\n              </div>\n            ))}\n          </div>\n          <button\n            onClick={copyToClipboard}\n            style={{\n              padding: '10px 20px',\n              backgroundColor: '#28a745',\n              color: '#fff',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n            }}\n          >\n            Copy to Clipboard\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMc,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAIC,iBAAiB,GAAGX,WAAW;IAEnC,IAAI,CAACA,WAAW,IAAI,CAACM,IAAI,EAAE;MACzBM,KAAK,CAAC,oDAAoD,CAAC;MAC3D;IACF;IAEA,IAAIN,IAAI,EAAE;MACR,IAAI;QACF,MAAMO,QAAQ,GAAG,MAAMP,IAAI,CAACQ,IAAI,CAAC,CAAC;QAClC,MAAMC,aAAa,GAAGF,QAAQ,CAACG,KAAK,CAAC,IAAI,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC;QACnER,iBAAiB,GAAGI,aAAa;MACnC,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdR,KAAK,CAAC,8BAA8B,CAAC;QACrCS,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpB;MACF;IACF;IAEAf,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAMiB,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,IAAI,CAAC,mCAAmC,EAAE;QACrEvB,WAAW,EAAEW;MACf,CAAC,CAAC;MAEFR,eAAe,CAACmB,QAAQ,CAACE,IAAI,CAACtB,YAAY,CAAC;IAC7C,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CR,KAAK,CAAC,+BAA+B,CAAC;IACxC,CAAC,SAAS;MACRP,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMoB,eAAe,GAAGA,CAAA,KAAM;IAC5BC,SAAS,CAACC,SAAS,CAACC,SAAS,CAAC1B,YAAY,CAAC;IAC3CU,KAAK,CAAC,6CAA6C,CAAC;EACtD,CAAC;EAED,oBACEf,OAAA;IAAKgC,SAAS,EAAC,KAAK;IAACC,KAAK,EAAE;MAAEC,UAAU,EAAE,mBAAmB;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC/EpC,OAAA;MAAAoC,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE/BxC,OAAA;MAAMyC,QAAQ,EAAE9B,YAAa;MAACsB,KAAK,EAAE;QAAES,YAAY,EAAE;MAAO,CAAE;MAAAN,QAAA,gBAC5DpC,OAAA;QAAKiC,KAAK,EAAE;UAAES,YAAY,EAAE;QAAO,CAAE;QAAAN,QAAA,gBACnCpC,OAAA;UAAOiC,KAAK,EAAE;YAAEU,OAAO,EAAE,OAAO;YAAED,YAAY,EAAE;UAAM,CAAE;UAAAN,QAAA,EAAC;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpFxC,OAAA;UACE4C,IAAI,EAAC,MAAM;UACXC,KAAK,EAAE1C,WAAY;UACnB2C,QAAQ,EAAGlC,CAAC,IAAKR,cAAc,CAACQ,CAAC,CAACmC,MAAM,CAACF,KAAK,CAAE;UAChDG,WAAW,EAAC,oBAAoB;UAChCf,KAAK,EAAE;YACLgB,KAAK,EAAE,MAAM;YACbd,OAAO,EAAE,KAAK;YACde,MAAM,EAAE,gBAAgB;YACxBC,YAAY,EAAE;UAChB;QAAE;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNxC,OAAA;QAAKiC,KAAK,EAAE;UAAES,YAAY,EAAE;QAAO,CAAE;QAAAN,QAAA,gBACnCpC,OAAA;UAAOiC,KAAK,EAAE;YAAEU,OAAO,EAAE,OAAO;YAAED,YAAY,EAAE;UAAM,CAAE;UAAAN,QAAA,EAAC;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACtFxC,OAAA;UACE4C,IAAI,EAAC,MAAM;UACXQ,MAAM,EAAC,QAAQ;UACfN,QAAQ,EAAGlC,CAAC,IAAKF,OAAO,CAACE,CAAC,CAACmC,MAAM,CAACM,KAAK,CAAC,CAAC,CAAC,CAAE;UAC5CpB,KAAK,EAAE;YACLE,OAAO,EAAE,KAAK;YACde,MAAM,EAAE,gBAAgB;YACxBC,YAAY,EAAE;UAChB;QAAE;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNxC,OAAA;QACE4C,IAAI,EAAC,QAAQ;QACbU,QAAQ,EAAE/C,OAAQ;QAClB0B,KAAK,EAAE;UACLE,OAAO,EAAE,WAAW;UACpBoB,eAAe,EAAE,SAAS;UAC1BC,KAAK,EAAE,MAAM;UACbN,MAAM,EAAE,MAAM;UACdC,YAAY,EAAE,KAAK;UACnBM,MAAM,EAAElD,OAAO,GAAG,aAAa,GAAG;QACpC,CAAE;QAAA6B,QAAA,EAED7B,OAAO,GAAG,eAAe,GAAG;MAAa;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EAENnC,YAAY,iBACXL,OAAA;MAAAoC,QAAA,gBACEpC,OAAA;QAAAoC,QAAA,EAAI;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/BxC,OAAA;QACEiC,KAAK,EAAE;UACLyB,SAAS,EAAE,OAAO;UAClBC,SAAS,EAAE,MAAM;UACjBxB,OAAO,EAAE,MAAM;UACfe,MAAM,EAAE,gBAAgB;UACxBC,YAAY,EAAE,KAAK;UACnBS,SAAS,EAAE,8BAA8B;UACzClB,YAAY,EAAE,MAAM;UACpBa,eAAe,EAAE;QACnB,CAAE;QAAAnB,QAAA,EAED/B,YAAY,CAACwD,KAAK,CAAC,IAAIC,MAAM,CAAC,OAAOC,IAAI,CAACC,KAAK,CAACC,MAAM,CAACC,UAAU,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACvGrE,OAAA;UAAiBiC,KAAK,EAAE;YAAEC,UAAU,EAAE,WAAW;YAAEoC,UAAU,EAAE;UAAW,CAAE;UAAAlC,QAAA,EACzEgC;QAAI,GADGC,KAAK;UAAAhC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNxC,OAAA;QACEuE,OAAO,EAAE3C,eAAgB;QACzBK,KAAK,EAAE;UACLE,OAAO,EAAE,WAAW;UACpBoB,eAAe,EAAE,SAAS;UAC1BC,KAAK,EAAE,MAAM;UACbN,MAAM,EAAE,MAAM;UACdC,YAAY,EAAE,KAAK;UACnBM,MAAM,EAAE;QACV,CAAE;QAAArB,QAAA,EACH;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACtC,EAAA,CAxIQD,GAAG;AAAAuE,EAAA,GAAHvE,GAAG;AA0IZ,eAAeA,GAAG;AAAC,IAAAuE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}