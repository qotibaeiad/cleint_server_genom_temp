{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qotib\\\\OneDrive\\\\Desktop\\\\DNA_PROJECT\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State for DNA input, file input, and processed result\n  const [dnaSequence, setDnaSequence] = useState('');\n  const [processedDna, setProcessedDna] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [file, setFile] = useState(null);\n\n  // Function to handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let sequenceToProcess = dnaSequence;\n    if (!dnaSequence && !file) {\n      alert('Please enter a DNA sequence or upload a FASTA file');\n      return;\n    }\n    if (file) {\n      try {\n        // Read the file and extract the DNA sequence\n        const fileText = await file.text();\n        const fastaSequence = fileText.split('\\n').slice(1).join('').trim(); // Ignore header and concatenate lines\n        sequenceToProcess = fastaSequence;\n      } catch (error) {\n        alert('Error reading the FASTA file');\n        console.error(error);\n        return;\n      }\n    }\n    setLoading(true);\n    try {\n      // Send the DNA sequence to the backend for processing\n      const response = await axios.post('http://localhost:3001/process-dna', {\n        dnaSequence: sequenceToProcess\n      });\n      setProcessedDna(response.data.processedDna);\n    } catch (error) {\n      console.error('Error processing DNA:', error);\n      alert('Error processing DNA sequence');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"DNA Sequence Processor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter DNA Sequence:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: dnaSequence,\n          onChange: e => setDnaSequence(e.target.value),\n          placeholder: \"Enter DNA sequence\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Or Upload FASTA File:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".fasta\",\n          onChange: e => setFile(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Processing...' : 'Process DNA'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), processedDna && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Processed DNA Sequence\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: processedDna\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MQBFny4tC+CqQRIvY6iMnACAQgo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","dnaSequence","setDnaSequence","processedDna","setProcessedDna","loading","setLoading","file","setFile","handleSubmit","e","preventDefault","sequenceToProcess","alert","fileText","text","fastaSequence","split","slice","join","trim","error","console","response","post","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","accept","files","disabled","_c","$RefreshReg$"],"sources":["C:/Users/qotib/OneDrive/Desktop/DNA_PROJECT/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  // State for DNA input, file input, and processed result\n  const [dnaSequence, setDnaSequence] = useState('');\n  const [processedDna, setProcessedDna] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [file, setFile] = useState(null);\n\n  // Function to handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    let sequenceToProcess = dnaSequence;\n\n    if (!dnaSequence && !file) {\n      alert('Please enter a DNA sequence or upload a FASTA file');\n      return;\n    }\n\n    if (file) {\n      try {\n        // Read the file and extract the DNA sequence\n        const fileText = await file.text();\n        const fastaSequence = fileText.split('\\n').slice(1).join('').trim(); // Ignore header and concatenate lines\n        sequenceToProcess = fastaSequence;\n      } catch (error) {\n        alert('Error reading the FASTA file');\n        console.error(error);\n        return;\n      }\n    }\n\n    setLoading(true);\n\n    try {\n      // Send the DNA sequence to the backend for processing\n      const response = await axios.post('http://localhost:3001/process-dna', {\n        dnaSequence: sequenceToProcess,\n      });\n\n      setProcessedDna(response.data.processedDna);\n    } catch (error) {\n      console.error('Error processing DNA:', error);\n      alert('Error processing DNA sequence');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>DNA Sequence Processor</h1>\n\n      {/* Form for input */}\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Enter DNA Sequence:</label>\n          <input\n            type=\"text\"\n            value={dnaSequence}\n            onChange={(e) => setDnaSequence(e.target.value)}\n            placeholder=\"Enter DNA sequence\"\n          />\n        </div>\n        <div>\n          <label>Or Upload FASTA File:</label>\n          <input\n            type=\"file\"\n            accept=\".fasta\"\n            onChange={(e) => setFile(e.target.files[0])}\n          />\n        </div>\n        <button type=\"submit\" disabled={loading}>\n          {loading ? 'Processing...' : 'Process DNA'}\n        </button>\n      </form>\n\n      {/* Display the processed DNA sequence */}\n      {processedDna && (\n        <div>\n          <h2>Processed DNA Sequence</h2>\n          <p>{processedDna}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}